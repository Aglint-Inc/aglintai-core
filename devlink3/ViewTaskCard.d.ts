import * as React from "react";
import * as Types from "./types";

declare function ViewTaskCard(props: {
  as?: React.ElementType;
  slotAssignedTo?: Types.Devlink.Slot;
  slotWhenToCall?: Types.Devlink.Slot;
  slotInterviewTaskPill?: Types.Devlink.Slot;
  slotCreatedBy?: Types.Devlink.Slot;
  slotDueDate?: Types.Devlink.Slot;
  textJobRole?: React.ReactNode;
  slotCandidate?: Types.Devlink.Slot;
  slotStatus?: Types.Devlink.Slot;
  slotType?: Types.Devlink.Slot;
  slotJob?: Types.Devlink.Slot;
  onClickCandidate?: Types.Devlink.RuntimeProps;
  onClickJob?: Types.Devlink.RuntimeProps;
  onClickInterview?: Types.Devlink.RuntimeProps;
  slotInterviewDate?: Types.Devlink.Slot;
  onClickInterviewDate?: Types.Devlink.RuntimeProps;
  onClickWhenToCall?: Types.Devlink.RuntimeProps;
  onClickAssignedTo?: Types.Devlink.RuntimeProps;
  onClickDueDate?: Types.Devlink.RuntimeProps;
  isTypeVisible?: Types.Visibility.VisibilityConditions;
  isJobVisible?: Types.Visibility.VisibilityConditions;
  isCandidateVisible?: Types.Visibility.VisibilityConditions;
  isInterviewVisible?: Types.Visibility.VisibilityConditions;
  isInterviewDateVisible?: Types.Visibility.VisibilityConditions;
  isCreatedByVisible?: Types.Visibility.VisibilityConditions;
  isDueDateVisible?: Types.Visibility.VisibilityConditions;
  isAssignedToVisible?: Types.Visibility.VisibilityConditions;
  isWhenToCallVisible?: Types.Visibility.VisibilityConditions;
  isStatusVisible?: Types.Visibility.VisibilityConditions;
  textWhenToCall?: React.ReactNode;
  slotWhentoCallIcon?: Types.Devlink.Slot;
  slotPriorityPill?: Types.Devlink.Slot;
  onClickPriority?: Types.Devlink.RuntimeProps;
  isPriorityVisible?: Types.Visibility.VisibilityConditions;
}): React.JSX.Element;
