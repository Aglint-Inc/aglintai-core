import * as React from "react";
import * as Types from "./types";

declare function CreateNewJob(props: {
  as?: React.ElementType;
  onClickBack?: Types.Devlink.RuntimeProps;
  onClickPreview?: Types.Devlink.RuntimeProps;
  onClickDetails?: Types.Devlink.RuntimeProps;
  isDetailsActive?: Types.Visibility.VisibilityConditions;
  onClickScoreSetting?: Types.Devlink.RuntimeProps;
  isScoreSettingActive?: Types.Visibility.VisibilityConditions;
  onClickEmailTemplates?: Types.Devlink.RuntimeProps;
  isEmailTemplateActive?: Types.Visibility.VisibilityConditions;
  onClickScreeningQuestions?: Types.Devlink.RuntimeProps;
  isScreeningQuestionsActive?: Types.Visibility.VisibilityConditions;
  onClickWorkflows?: Types.Devlink.RuntimeProps;
  isWorkflowsActive?: Types.Visibility.VisibilityConditions;
  slotCreateJob?: Types.Devlink.Slot;
  textJobName?: React.ReactNode;
  slotPublishButton?: Types.Devlink.Slot;
  slotSavedChanges?: Types.Devlink.Slot;
  slotDisclaimerDetails?: Types.Devlink.Slot;
  slotDisclaimerApplyForm?: Types.Devlink.Slot;
  slotDisclaimerScoreSetting?: Types.Devlink.Slot;
  slotEmailDisclaimer?: Types.Devlink.Slot;
  slotDisclaimerScreening?: Types.Devlink.Slot;
  slotDisclaimerWorkflow?: Types.Devlink.Slot;
  isPreviewVisible?: Types.Visibility.VisibilityConditions;
  slotAtsBadge?: Types.Devlink.Slot;
  onClickPreviewChanges?: Types.Devlink.RuntimeProps;
  slotUnpublishDisclaimer?: Types.Devlink.Slot;
  isBetaVisible?: Types.Visibility.VisibilityConditions;
  slotCloseJobButton?: Types.Devlink.Slot;
  onClickDiscardChanges?: Types.Devlink.RuntimeProps;
  isUnpublishWarningVisible?: Types.Visibility.VisibilityConditions;
  isScreeningActive?: Types.Visibility.VisibilityConditions;
  onClickScreening?: Types.Devlink.RuntimeProps;
  isProductionVisible?: Types.Visibility.VisibilityConditions;
  isDotButtonVisible?: Types.Visibility.VisibilityConditions;
  slotNavSublink?: Types.Devlink.Slot;
  isAssessmentPreviewVisible?: Types.Visibility.VisibilityConditions;
  isProceedDisable?: Types.Visibility.VisibilityConditions;
  onClickProceed?: Types.Devlink.RuntimeProps;
  isProceedVisible?: Types.Visibility.VisibilityConditions;
  slotWarning?: Types.Devlink.Slot;
  textProceed?: React.ReactNode;
  slotSideSection?: Types.Devlink.Slot;
  isSideNavVisible?: Types.Visibility.VisibilityConditions;
  isHeaderVisible?: Types.Visibility.VisibilityConditions;
}): React.JSX.Element;
